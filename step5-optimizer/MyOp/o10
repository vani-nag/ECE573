; Symbol table GLOBAL
; name a type FLOAT location 0x20000000
; name b type FLOAT location 0x20000004
; name c type FLOAT location 0x20000008
; name d type FLOAT location 0x2000000c
; name prompt type STRING location 0x10000000 value "Enter a number: "
; Function: INT main([])

; Symbol table main

In AssignNode left temp = $ga
In AssignNode left temp = $gb
In BinaryOpNode type = MUL
In BinaryOpNode inst = FMUL.S $f1, $gb, $gc
In BinaryOpNode type = ADD
In BinaryOpNode inst = FADD.S $f2, $ga, $f1
Instruction List
FMV.S $ga, 1.3
FMV.S $gb, 2.5
PUTS $gprompt
GETF $gc
FMUL.S $f1, $gb, $gc
FADD.S $f2, $ga, $f1
PUTF $f2
MV $l8, 0
J func_ret_main


HashMap
[$ga, $gb, $gc, $gd, $gprompt]	
[$ga, $gb, $gc, $gd, $gprompt]	
[$ga, $gb, $gc, $gd, $gprompt]	
[$ga, $gb, $gc, $gd, $gprompt, $f2]	
[$ga, $gb, $gc, $gd, $gprompt, $f1]	
[$ga, $gb, $gc, $gd, $gprompt]	
[$ga, $gb, $gd, $gprompt]	
[$ga, $gb, $gd, $gprompt]	
0 [$ga, $gd, $gprompt]

1 [$ga, $gb, $gd, $gprompt]

2 [$ga, $gb, $gd, $gprompt]

3 [$ga, $gb, $gc, $gd, $gprompt]

4 [$ga, $gb, $gc, $gd, $gprompt, $f1]

5 [$ga, $gb, $gc, $gd, $gprompt, $f2]

6 [$ga, $gb, $gc, $gd, $gprompt]

7 [$ga, $gb, $gc, $gd, $gprompt]

8 [$ga, $gb, $gc, $gd, $gprompt]


Instruction :FMV.S $ga, 1.3
Allocate: this.src1Reg null
Freed: 1.3 in f0
Allocate: this.src1Reg null

Instruction :FMV.S $gb, 2.5
Allocate: this.src1Reg null
Freed: 2.5 in f1
Allocate: this.src1Reg null

Instruction :PUTS $gprompt
came to puts

Instruction :GETF $gc
Allocate: this.src1Reg null

Instruction :FMUL.S $f1, $gb, $gc
Allocate: this.src1Reg *

Instruction :FADD.S $f2, $ga, $f1
Freed: $f1 in f3
Allocate: this.src1Reg *

Instruction :PUTF $f2
Freed: $f2 in f3

Instruction :MV $l8, 0
Allocate: this.src1Reg *
empty spot
4
allocated index 4 allocated value 0
freeing: 4
Freed: 0 in x4
Allocate: this.src1Reg *
empty spot
4

Instruction :J func_ret_main
Entering reg save
x0 =no
x1 =no
x2 =no
x3 =address
x4 =$l8
x5 =empty
x6 =empty
x7 =empty
x8 =no
FnNode body: FMV.S $ga, 1.3
FMV.S $gb, 2.5
PUTS $gprompt
GETF $gc
FMUL.S $f1, $gb, $gc
FADD.S $f2, $ga, $f1
PUTF $f2
MV $l8, 0
J func_ret_main

.section .text
;Current temp: null
;IR Code: 
MV fp, sp
JR func_main
HALT
;
func_main:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, 0
SW x4, 0(sp)
ADDI sp, sp, -4
FSW f0, 0(sp)
ADDI sp, sp, -4
FSW f1, 0(sp)
ADDI sp, sp, -4
FSW f2, 0(sp)
ADDI sp, sp, -4
FSW f3, 0(sp)
ADDI sp, sp, -4
FIMM.S f0, 1.3
FMV.S f0, f0
FIMM.S f1, 2.5
FMV.S f1, f1
LA x3, 0x10000000
PUTS x3
GETF f2
FMUL.S f3, f1, f2
FADD.S f3, f0, f3
PUTF f3
LI x4, 0
MV x4, x4
LA x3, 0x20000000
FSW f0, 0(x3)
LA x3, 0x20000004
FSW f1, 0(x3)
LA x3, 0x20000008
FSW f2, 0(x3)
SW x4, 8(fp)
J func_ret_main
func_ret_main:
ADDI sp, sp, 4
FLW f3, 0(sp)
ADDI sp, sp, 4
FLW f2, 0(sp)
ADDI sp, sp, 4
FLW f1, 0(sp)
ADDI sp, sp, 4
FLW f0, 0(sp)
ADDI sp, sp, 4
LW x4, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET
;


.section .strings
0x10000000 "Enter a number: "
